version: '3'

services:
  server_proxy:
    build:
      context: server_proxy/.
      dockerfile: WPCareServerProxy.Dockerfile
    restart: always
    environment:
      - FLASK_SERVER_ADDR=server_api:8000
    ports:
      - '80:80'
    depends_on:
      - server_api
    healthcheck:
      test: ['CMD-SHELL', 'curl --silent --fail localhost:80/health-check || exit 1']
      interval: 300s
      timeout: 10s
      retries: 3
    command: /app/start.sh

  server_api:
    build:
      context: server_api/.
      dockerfile: WPCareServerApi.Dockerfile
    restart: always
    environment:
      PGSQL_WPCARE_DB: ${PGSQL_WPCARE_DB}
      PGSQL_WPCARE_USER: ${PGSQL_WPCARE_USER}
      PGSQL_WPCARE_PASSWORD: ${PGSQL_WPCARE_PASSWORD}
    ports:
      - '8000:8000'
    depends_on:
      - server_data
    healthcheck:
      test: ['CMD-SHELL', 'curl --silent --fail localhost:8000/flask-health-check || exit 1']
      interval: 300s
      timeout: 10s
      retries: 3
    command: gunicorn -w 3 -t 60 -b 0.0.0.0:8000 app:app

  server_data:
    build:
      context: server_data/.
      dockerfile: WPCareServerData.Dockerfile
      args:
        PGSQL_WPCARE_DB: ${PGSQL_WPCARE_DB}
        PGSQL_WPCARE_USER: ${PGSQL_WPCARE_USER}
        PGSQL_WPCARE_PASSWORD: ${PGSQL_WPCARE_PASSWORD}
    restart: always
    environment:
      POSTGRES_PASSWORD: ${PGSQL_ROOT_PASSWORD}
      POSTGRES_USER: ${PGSQL_ROOT_USER}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${PGSQL_WPCARE_DB}"]
      interval: 150s
      timeout: 60s
      retries: 5
      start_period: 80s 